name: Continuous Integration
"on":
    push:
        branches:
            - develop
    pull_request:
        branches:
            - develop
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.x, 14.x]
        steps:
            - uses: actions/checkout@v2
            - name: "Use Node.js ${{ matrix.node-version }}"
              uses: actions/setup-node@v1
              with:
                  node-version: "${{ matrix.node-version }}"
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: 'echo "::set-output name=dir::$(yarn cache dir)"'
            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
                  key: "${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}"
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn --prefer-offline
            - name: Build project
              run: yarn ci:build

    format:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version:
                    - 14.x
        steps:
            - uses: actions/checkout@v2
            - name: "Use Node.js ${{ matrix.node-version }}"
              uses: actions/setup-node@v1
              with:
                  node-version: "${{ matrix.node-version }}"
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: 'echo "::set-output name=dir::$(yarn cache dir)"'
            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
                  key: "${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}"
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn --prefer-offline
            - name: Check for formatting of the project
              run: yarn run ci:format

    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version:
                    - 14.x
        steps:
            - uses: actions/checkout@v2
            - name: "Use Node.js ${{ matrix.node-version }}"
              uses: actions/setup-node@v1
              with:
                  node-version: "${{ matrix.node-version }}"
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: 'echo "::set-output name=dir::$(yarn cache dir)"'
            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
                  key: "${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}"
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn --prefer-offline
            - name: Test project and upload coverage to Code Climate
              uses: paambaati/codeclimate-action@v2.6.0
              env:
                  CC_TEST_REPORTER_ID: "${{secrets.CC_TEST_REPORTER_ID}}"
              with:
                  coverageCommand: yarn ci:test

    type-check:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version:
                    - 14.x
        steps:
            - uses: actions/checkout@v2
            - name: "Use Node.js ${{ matrix.node-version }}"
              uses: actions/setup-node@v1
              with:
                  node-version: "${{ matrix.node-version }}"
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: 'echo "::set-output name=dir::$(yarn cache dir)"'
            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
                  key: "${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}"
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn --prefer-offline
            - name: Type check TypeScript files of the project
              run: yarn ci:type-check
